// -------------------------------------------------------------
// 
// File Name: C:\Users\admin\Desktop\bhavesh\noise_cancel\hdlsrc\noise_cancel_fixpt.v
// Created: 2017-04-25 20:39:09
// 
// Generated by MATLAB 9.2, MATLAB Coder 3.3 and HDL Coder 3.10
// 
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Design base rate: 1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: noise_cancel_fixpt
// Source Path: noise_cancel_fixpt
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module noise_cancel_fixpt
          (s_0,
           s_1,
           s_2,
           s_3,
           s_4,
           s_5,
           s_6,
           s_7,
           s_8,
           s_9,
           s_10,
           s_11,
           s_12,
           s_13,
           s_14,
           s_15,
           s_16,
           s_17,
           s_18,
           s_19,
           s_20,
           s_21,
           s_22,
           s_23,
           s_24,
           s_25,
           s_26,
           s_27,
           s_28,
           s_29,
           s_30,
           s_31,
           s_32,
           s_33,
           s_34,
           s_35,
           s_36,
           s_37,
           s_38,
           s_39,
           s_40,
           s_41,
           s_42,
           s_43,
           s_44,
           s_45,
           s_46,
           s_47,
           s_48,
           s_49,
           s_50,
           s_51,
           s_52,
           s_53,
           s_54,
           s_55,
           s_56,
           s_57,
           s_58,
           s_59,
           s_60,
           s_61,
           s_62,
           s_63,
           s_64,
           s_65,
           s_66,
           s_67,
           s_68,
           s_69,
           s_70,
           s_71,
           s_72,
           s_73,
           s_74,
           s_75,
           s_76,
           s_77,
           s_78,
           s_79,
           s_80,
           s_81,
           s_82,
           s_83,
           s_84,
           s_85,
           s_86,
           s_87,
           s_88,
           s_89,
           s_90,
           s_91,
           s_92,
           s_93,
           s_94,
           s_95,
           s_96,
           s_97,
           s_98,
           s_99,
           n_0,
           n_1,
           n_2,
           n_3,
           n_4,
           n_5,
           n_6,
           n_7,
           n_8,
           n_9,
           n_10,
           n_11,
           n_12,
           n_13,
           n_14,
           n_15,
           n_16,
           n_17,
           n_18,
           n_19,
           n_20,
           n_21,
           n_22,
           n_23,
           n_24,
           n_25,
           n_26,
           n_27,
           n_28,
           n_29,
           n_30,
           n_31,
           n_32,
           n_33,
           n_34,
           n_35,
           n_36,
           n_37,
           n_38,
           n_39,
           n_40,
           n_41,
           n_42,
           n_43,
           n_44,
           n_45,
           n_46,
           n_47,
           n_48,
           n_49,
           n_50,
           n_51,
           n_52,
           n_53,
           n_54,
           n_55,
           n_56,
           n_57,
           n_58,
           n_59,
           n_60,
           n_61,
           n_62,
           n_63,
           n_64,
           n_65,
           n_66,
           n_67,
           n_68,
           n_69,
           n_70,
           n_71,
           n_72,
           n_73,
           n_74,
           n_75,
           n_76,
           n_77,
           n_78,
           n_79,
           n_80,
           n_81,
           n_82,
           n_83,
           n_84,
           n_85,
           n_86,
           n_87,
           n_88,
           n_89,
           n_90,
           n_91,
           n_92,
           n_93,
           n_94,
           n_95,
           n_96,
           n_97,
           n_98,
           n_99,
           e_0,
           e_1,
           e_2,
           e_3,
           e_4,
           e_5,
           e_6,
           e_7,
           e_8,
           e_9,
           e_10,
           e_11,
           e_12,
           e_13,
           e_14,
           e_15,
           e_16,
           e_17,
           e_18,
           e_19,
           e_20,
           e_21,
           e_22,
           e_23,
           e_24,
           e_25,
           W,
           bhat_0,
           bhat_1,
           bhat_2,
           bhat_3,
           bhat_4,
           bhat_5,
           bhat_6,
           bhat_7,
           bhat_8,
           bhat_9,
           bhat_10,
           bhat_11,
           bhat_12,
           bhat_13,
           bhat_14,
           bhat_15,
           bhat_16,
           bhat_17,
           bhat_18,
           bhat_19,
           bhat_20,
           bhat_21,
           bhat_22,
           bhat_23,
           bhat_24,
           bhat_25);


  input   signed [13:0] s_0;  // sfix14_En23
  input   signed [13:0] s_1;  // sfix14_En23
  input   signed [13:0] s_2;  // sfix14_En23
  input   signed [13:0] s_3;  // sfix14_En23
  input   signed [13:0] s_4;  // sfix14_En23
  input   signed [13:0] s_5;  // sfix14_En23
  input   signed [13:0] s_6;  // sfix14_En23
  input   signed [13:0] s_7;  // sfix14_En23
  input   signed [13:0] s_8;  // sfix14_En23
  input   signed [13:0] s_9;  // sfix14_En23
  input   signed [13:0] s_10;  // sfix14_En23
  input   signed [13:0] s_11;  // sfix14_En23
  input   signed [13:0] s_12;  // sfix14_En23
  input   signed [13:0] s_13;  // sfix14_En23
  input   signed [13:0] s_14;  // sfix14_En23
  input   signed [13:0] s_15;  // sfix14_En23
  input   signed [13:0] s_16;  // sfix14_En23
  input   signed [13:0] s_17;  // sfix14_En23
  input   signed [13:0] s_18;  // sfix14_En23
  input   signed [13:0] s_19;  // sfix14_En23
  input   signed [13:0] s_20;  // sfix14_En23
  input   signed [13:0] s_21;  // sfix14_En23
  input   signed [13:0] s_22;  // sfix14_En23
  input   signed [13:0] s_23;  // sfix14_En23
  input   signed [13:0] s_24;  // sfix14_En23
  input   signed [13:0] s_25;  // sfix14_En23
  input   signed [13:0] s_26;  // sfix14_En23
  input   signed [13:0] s_27;  // sfix14_En23
  input   signed [13:0] s_28;  // sfix14_En23
  input   signed [13:0] s_29;  // sfix14_En23
  input   signed [13:0] s_30;  // sfix14_En23
  input   signed [13:0] s_31;  // sfix14_En23
  input   signed [13:0] s_32;  // sfix14_En23
  input   signed [13:0] s_33;  // sfix14_En23
  input   signed [13:0] s_34;  // sfix14_En23
  input   signed [13:0] s_35;  // sfix14_En23
  input   signed [13:0] s_36;  // sfix14_En23
  input   signed [13:0] s_37;  // sfix14_En23
  input   signed [13:0] s_38;  // sfix14_En23
  input   signed [13:0] s_39;  // sfix14_En23
  input   signed [13:0] s_40;  // sfix14_En23
  input   signed [13:0] s_41;  // sfix14_En23
  input   signed [13:0] s_42;  // sfix14_En23
  input   signed [13:0] s_43;  // sfix14_En23
  input   signed [13:0] s_44;  // sfix14_En23
  input   signed [13:0] s_45;  // sfix14_En23
  input   signed [13:0] s_46;  // sfix14_En23
  input   signed [13:0] s_47;  // sfix14_En23
  input   signed [13:0] s_48;  // sfix14_En23
  input   signed [13:0] s_49;  // sfix14_En23
  input   signed [13:0] s_50;  // sfix14_En23
  input   signed [13:0] s_51;  // sfix14_En23
  input   signed [13:0] s_52;  // sfix14_En23
  input   signed [13:0] s_53;  // sfix14_En23
  input   signed [13:0] s_54;  // sfix14_En23
  input   signed [13:0] s_55;  // sfix14_En23
  input   signed [13:0] s_56;  // sfix14_En23
  input   signed [13:0] s_57;  // sfix14_En23
  input   signed [13:0] s_58;  // sfix14_En23
  input   signed [13:0] s_59;  // sfix14_En23
  input   signed [13:0] s_60;  // sfix14_En23
  input   signed [13:0] s_61;  // sfix14_En23
  input   signed [13:0] s_62;  // sfix14_En23
  input   signed [13:0] s_63;  // sfix14_En23
  input   signed [13:0] s_64;  // sfix14_En23
  input   signed [13:0] s_65;  // sfix14_En23
  input   signed [13:0] s_66;  // sfix14_En23
  input   signed [13:0] s_67;  // sfix14_En23
  input   signed [13:0] s_68;  // sfix14_En23
  input   signed [13:0] s_69;  // sfix14_En23
  input   signed [13:0] s_70;  // sfix14_En23
  input   signed [13:0] s_71;  // sfix14_En23
  input   signed [13:0] s_72;  // sfix14_En23
  input   signed [13:0] s_73;  // sfix14_En23
  input   signed [13:0] s_74;  // sfix14_En23
  input   signed [13:0] s_75;  // sfix14_En23
  input   signed [13:0] s_76;  // sfix14_En23
  input   signed [13:0] s_77;  // sfix14_En23
  input   signed [13:0] s_78;  // sfix14_En23
  input   signed [13:0] s_79;  // sfix14_En23
  input   signed [13:0] s_80;  // sfix14_En23
  input   signed [13:0] s_81;  // sfix14_En23
  input   signed [13:0] s_82;  // sfix14_En23
  input   signed [13:0] s_83;  // sfix14_En23
  input   signed [13:0] s_84;  // sfix14_En23
  input   signed [13:0] s_85;  // sfix14_En23
  input   signed [13:0] s_86;  // sfix14_En23
  input   signed [13:0] s_87;  // sfix14_En23
  input   signed [13:0] s_88;  // sfix14_En23
  input   signed [13:0] s_89;  // sfix14_En23
  input   signed [13:0] s_90;  // sfix14_En23
  input   signed [13:0] s_91;  // sfix14_En23
  input   signed [13:0] s_92;  // sfix14_En23
  input   signed [13:0] s_93;  // sfix14_En23
  input   signed [13:0] s_94;  // sfix14_En23
  input   signed [13:0] s_95;  // sfix14_En23
  input   signed [13:0] s_96;  // sfix14_En23
  input   signed [13:0] s_97;  // sfix14_En23
  input   signed [13:0] s_98;  // sfix14_En23
  input   signed [13:0] s_99;  // sfix14_En23
  input   signed [13:0] n_0;  // sfix14_En19
  input   signed [13:0] n_1;  // sfix14_En19
  input   signed [13:0] n_2;  // sfix14_En19
  input   signed [13:0] n_3;  // sfix14_En19
  input   signed [13:0] n_4;  // sfix14_En19
  input   signed [13:0] n_5;  // sfix14_En19
  input   signed [13:0] n_6;  // sfix14_En19
  input   signed [13:0] n_7;  // sfix14_En19
  input   signed [13:0] n_8;  // sfix14_En19
  input   signed [13:0] n_9;  // sfix14_En19
  input   signed [13:0] n_10;  // sfix14_En19
  input   signed [13:0] n_11;  // sfix14_En19
  input   signed [13:0] n_12;  // sfix14_En19
  input   signed [13:0] n_13;  // sfix14_En19
  input   signed [13:0] n_14;  // sfix14_En19
  input   signed [13:0] n_15;  // sfix14_En19
  input   signed [13:0] n_16;  // sfix14_En19
  input   signed [13:0] n_17;  // sfix14_En19
  input   signed [13:0] n_18;  // sfix14_En19
  input   signed [13:0] n_19;  // sfix14_En19
  input   signed [13:0] n_20;  // sfix14_En19
  input   signed [13:0] n_21;  // sfix14_En19
  input   signed [13:0] n_22;  // sfix14_En19
  input   signed [13:0] n_23;  // sfix14_En19
  input   signed [13:0] n_24;  // sfix14_En19
  input   signed [13:0] n_25;  // sfix14_En19
  input   signed [13:0] n_26;  // sfix14_En19
  input   signed [13:0] n_27;  // sfix14_En19
  input   signed [13:0] n_28;  // sfix14_En19
  input   signed [13:0] n_29;  // sfix14_En19
  input   signed [13:0] n_30;  // sfix14_En19
  input   signed [13:0] n_31;  // sfix14_En19
  input   signed [13:0] n_32;  // sfix14_En19
  input   signed [13:0] n_33;  // sfix14_En19
  input   signed [13:0] n_34;  // sfix14_En19
  input   signed [13:0] n_35;  // sfix14_En19
  input   signed [13:0] n_36;  // sfix14_En19
  input   signed [13:0] n_37;  // sfix14_En19
  input   signed [13:0] n_38;  // sfix14_En19
  input   signed [13:0] n_39;  // sfix14_En19
  input   signed [13:0] n_40;  // sfix14_En19
  input   signed [13:0] n_41;  // sfix14_En19
  input   signed [13:0] n_42;  // sfix14_En19
  input   signed [13:0] n_43;  // sfix14_En19
  input   signed [13:0] n_44;  // sfix14_En19
  input   signed [13:0] n_45;  // sfix14_En19
  input   signed [13:0] n_46;  // sfix14_En19
  input   signed [13:0] n_47;  // sfix14_En19
  input   signed [13:0] n_48;  // sfix14_En19
  input   signed [13:0] n_49;  // sfix14_En19
  input   signed [13:0] n_50;  // sfix14_En19
  input   signed [13:0] n_51;  // sfix14_En19
  input   signed [13:0] n_52;  // sfix14_En19
  input   signed [13:0] n_53;  // sfix14_En19
  input   signed [13:0] n_54;  // sfix14_En19
  input   signed [13:0] n_55;  // sfix14_En19
  input   signed [13:0] n_56;  // sfix14_En19
  input   signed [13:0] n_57;  // sfix14_En19
  input   signed [13:0] n_58;  // sfix14_En19
  input   signed [13:0] n_59;  // sfix14_En19
  input   signed [13:0] n_60;  // sfix14_En19
  input   signed [13:0] n_61;  // sfix14_En19
  input   signed [13:0] n_62;  // sfix14_En19
  input   signed [13:0] n_63;  // sfix14_En19
  input   signed [13:0] n_64;  // sfix14_En19
  input   signed [13:0] n_65;  // sfix14_En19
  input   signed [13:0] n_66;  // sfix14_En19
  input   signed [13:0] n_67;  // sfix14_En19
  input   signed [13:0] n_68;  // sfix14_En19
  input   signed [13:0] n_69;  // sfix14_En19
  input   signed [13:0] n_70;  // sfix14_En19
  input   signed [13:0] n_71;  // sfix14_En19
  input   signed [13:0] n_72;  // sfix14_En19
  input   signed [13:0] n_73;  // sfix14_En19
  input   signed [13:0] n_74;  // sfix14_En19
  input   signed [13:0] n_75;  // sfix14_En19
  input   signed [13:0] n_76;  // sfix14_En19
  input   signed [13:0] n_77;  // sfix14_En19
  input   signed [13:0] n_78;  // sfix14_En19
  input   signed [13:0] n_79;  // sfix14_En19
  input   signed [13:0] n_80;  // sfix14_En19
  input   signed [13:0] n_81;  // sfix14_En19
  input   signed [13:0] n_82;  // sfix14_En19
  input   signed [13:0] n_83;  // sfix14_En19
  input   signed [13:0] n_84;  // sfix14_En19
  input   signed [13:0] n_85;  // sfix14_En19
  input   signed [13:0] n_86;  // sfix14_En19
  input   signed [13:0] n_87;  // sfix14_En19
  input   signed [13:0] n_88;  // sfix14_En19
  input   signed [13:0] n_89;  // sfix14_En19
  input   signed [13:0] n_90;  // sfix14_En19
  input   signed [13:0] n_91;  // sfix14_En19
  input   signed [13:0] n_92;  // sfix14_En19
  input   signed [13:0] n_93;  // sfix14_En19
  input   signed [13:0] n_94;  // sfix14_En19
  input   signed [13:0] n_95;  // sfix14_En19
  input   signed [13:0] n_96;  // sfix14_En19
  input   signed [13:0] n_97;  // sfix14_En19
  input   signed [13:0] n_98;  // sfix14_En19
  input   signed [13:0] n_99;  // sfix14_En19
  output  e_0;  // ufix1
  output  e_1;  // ufix1
  output  e_2;  // ufix1
  output  e_3;  // ufix1
  output  e_4;  // ufix1
  output  e_5;  // ufix1
  output  e_6;  // ufix1
  output  e_7;  // ufix1
  output  e_8;  // ufix1
  output  e_9;  // ufix1
  output  e_10;  // ufix1
  output  e_11;  // ufix1
  output  e_12;  // ufix1
  output  e_13;  // ufix1
  output  e_14;  // ufix1
  output  e_15;  // ufix1
  output  e_16;  // ufix1
  output  e_17;  // ufix1
  output  e_18;  // ufix1
  output  e_19;  // ufix1
  output  e_20;  // ufix1
  output  e_21;  // ufix1
  output  e_22;  // ufix1
  output  e_23;  // ufix1
  output  e_24;  // ufix1
  output  e_25;  // ufix1
  output  W;  // ufix1
  output  bhat_0;  // ufix1
  output  bhat_1;  // ufix1
  output  bhat_2;  // ufix1
  output  bhat_3;  // ufix1
  output  bhat_4;  // ufix1
  output  bhat_5;  // ufix1
  output  bhat_6;  // ufix1
  output  bhat_7;  // ufix1
  output  bhat_8;  // ufix1
  output  bhat_9;  // ufix1
  output  bhat_10;  // ufix1
  output  bhat_11;  // ufix1
  output  bhat_12;  // ufix1
  output  bhat_13;  // ufix1
  output  bhat_14;  // ufix1
  output  bhat_15;  // ufix1
  output  bhat_16;  // ufix1
  output  bhat_17;  // ufix1
  output  bhat_18;  // ufix1
  output  bhat_19;  // ufix1
  output  bhat_20;  // ufix1
  output  bhat_21;  // ufix1
  output  bhat_22;  // ufix1
  output  bhat_23;  // ufix1
  output  bhat_24;  // ufix1
  output  bhat_25;  // ufix1

  wire signed [13:0] s [0:99];  // sfix14_En23 [100]
  wire signed [13:0] n [0:99];  // sfix14_En19 [100]
  reg  [0:25] e;  // ufix1 [26]
  reg  W_1;  // ufix1
  reg  [0:25] bhat;  // ufix1 [26]
  reg  [0:25] noise_cancel_fixpt_bhat;  // ufix1 [26]
  reg  [0:25] noise_cancel_fixpt_e;  // ufix1 [26]
  reg  [0:25] noise_cancel_fixpt_e_0;  // ufix1 [26]
  reg signed [31:0] noise_cancel_fixpt_i;  // int32
  reg signed [7:0] noise_cancel_fixpt_i_0;  // sfix8
  reg  noise_cancel_fixpt_W;  // ufix1
  reg  [0:25] noise_cancel_fixpt_bhat_0;  // ufix1 [26]
  reg signed [31:0] noise_cancel_fixpt_i_1;  // int32
  reg signed [7:0] noise_cancel_fixpt_i_2;  // sfix8
  reg  noise_cancel_fixpt_W_0;  // ufix1
  reg signed [8:0] noise_cancel_fixpt_add_temp [0:24];  // sfix9 [25]
  reg signed [9:0] noise_cancel_fixpt_sub_temp [0:24];  // sfix10 [25]
  reg signed [31:0] noise_cancel_fixpt_add_temp_0 [0:24];  // int32 [25]
  reg signed [8:0] noise_cancel_fixpt_add_temp_1 [0:24];  // sfix9 [25]
  reg signed [9:0] noise_cancel_fixpt_sub_temp_0 [0:24];  // sfix10 [25]
  reg  [0:24] noise_cancel_fixpt_sub_cast;  // ufix1 [25]
  reg signed [2:0] noise_cancel_fixpt_sub_cast_0 [0:24];  // sfix3 [25]
  reg signed [2:0] noise_cancel_fixpt_sub_temp_1 [0:24];  // sfix3 [25]
  reg signed [9:0] noise_cancel_fixpt_add_temp_2 [0:24];  // sfix10 [25]
  reg [3:0] noise_cancel_fixpt_add_cast [0:24];  // ufix4 [25]
  reg [3:0] noise_cancel_fixpt_add_temp_3 [0:24];  // ufix4 [25]
  reg signed [31:0] noise_cancel_fixpt_add_temp_4 [0:24];  // int32 [25]
  reg signed [8:0] noise_cancel_fixpt_add_temp_5 [0:24];  // sfix9 [25]
  reg signed [9:0] noise_cancel_fixpt_sub_temp_2 [0:24];  // sfix10 [25]
  reg  [0:24] noise_cancel_fixpt_sub_cast_1;  // ufix1 [25]
  reg signed [2:0] noise_cancel_fixpt_sub_cast_2 [0:24];  // sfix3 [25]
  reg signed [2:0] noise_cancel_fixpt_sub_temp_3 [0:24];  // sfix3 [25]
  reg signed [9:0] noise_cancel_fixpt_add_temp_6 [0:24];  // sfix10 [25]
  reg [3:0] noise_cancel_fixpt_add_cast_0 [0:24];  // ufix4 [25]
  reg [3:0] noise_cancel_fixpt_add_temp_7 [0:24];  // ufix4 [25]
  reg signed [31:0] noise_cancel_fixpt_add_temp_8 [0:24];  // int32 [25]
  reg signed [7:0] noise_cancel_fixpt_t_0 [0:24];  // sfix8 [25]
  reg signed [8:0] noise_cancel_fixpt_t_1 [0:24];  // sfix9 [25]
  reg signed [9:0] noise_cancel_fixpt_t_2 [0:24];  // sfix10 [25]
  reg signed [8:0] noise_cancel_fixpt_t_3 [0:24];  // sfix9 [25]
  reg signed [9:0] noise_cancel_fixpt_t_4 [0:24];  // sfix10 [25]
  reg  [0:24] noise_cancel_fixpt_t_5;  // ufix1 [25]
  reg signed [2:0] noise_cancel_fixpt_t_6 [0:24];  // sfix3 [25]
  reg signed [9:0] noise_cancel_fixpt_t_7 [0:24];  // sfix10 [25]
  reg  [0:24] noise_cancel_fixpt_t_8;  // ufix1 [25]
  reg [3:0] noise_cancel_fixpt_t_9 [0:24];  // ufix4 [25]
  reg signed [8:0] noise_cancel_fixpt_t_10 [0:24];  // sfix9 [25]
  reg signed [9:0] noise_cancel_fixpt_t_11 [0:24];  // sfix10 [25]
  reg  [0:24] noise_cancel_fixpt_t_12;  // ufix1 [25]
  reg signed [2:0] noise_cancel_fixpt_t_13 [0:24];  // sfix3 [25]
  reg signed [9:0] noise_cancel_fixpt_t_14 [0:24];  // sfix10 [25]
  reg  [0:24] noise_cancel_fixpt_t_15;  // ufix1 [25]
  reg [3:0] noise_cancel_fixpt_t_16 [0:24];  // ufix4 [25]


  assign s[0] = s_0;
  assign s[1] = s_1;
  assign s[2] = s_2;
  assign s[3] = s_3;
  assign s[4] = s_4;
  assign s[5] = s_5;
  assign s[6] = s_6;
  assign s[7] = s_7;
  assign s[8] = s_8;
  assign s[9] = s_9;
  assign s[10] = s_10;
  assign s[11] = s_11;
  assign s[12] = s_12;
  assign s[13] = s_13;
  assign s[14] = s_14;
  assign s[15] = s_15;
  assign s[16] = s_16;
  assign s[17] = s_17;
  assign s[18] = s_18;
  assign s[19] = s_19;
  assign s[20] = s_20;
  assign s[21] = s_21;
  assign s[22] = s_22;
  assign s[23] = s_23;
  assign s[24] = s_24;
  assign s[25] = s_25;
  assign s[26] = s_26;
  assign s[27] = s_27;
  assign s[28] = s_28;
  assign s[29] = s_29;
  assign s[30] = s_30;
  assign s[31] = s_31;
  assign s[32] = s_32;
  assign s[33] = s_33;
  assign s[34] = s_34;
  assign s[35] = s_35;
  assign s[36] = s_36;
  assign s[37] = s_37;
  assign s[38] = s_38;
  assign s[39] = s_39;
  assign s[40] = s_40;
  assign s[41] = s_41;
  assign s[42] = s_42;
  assign s[43] = s_43;
  assign s[44] = s_44;
  assign s[45] = s_45;
  assign s[46] = s_46;
  assign s[47] = s_47;
  assign s[48] = s_48;
  assign s[49] = s_49;
  assign s[50] = s_50;
  assign s[51] = s_51;
  assign s[52] = s_52;
  assign s[53] = s_53;
  assign s[54] = s_54;
  assign s[55] = s_55;
  assign s[56] = s_56;
  assign s[57] = s_57;
  assign s[58] = s_58;
  assign s[59] = s_59;
  assign s[60] = s_60;
  assign s[61] = s_61;
  assign s[62] = s_62;
  assign s[63] = s_63;
  assign s[64] = s_64;
  assign s[65] = s_65;
  assign s[66] = s_66;
  assign s[67] = s_67;
  assign s[68] = s_68;
  assign s[69] = s_69;
  assign s[70] = s_70;
  assign s[71] = s_71;
  assign s[72] = s_72;
  assign s[73] = s_73;
  assign s[74] = s_74;
  assign s[75] = s_75;
  assign s[76] = s_76;
  assign s[77] = s_77;
  assign s[78] = s_78;
  assign s[79] = s_79;
  assign s[80] = s_80;
  assign s[81] = s_81;
  assign s[82] = s_82;
  assign s[83] = s_83;
  assign s[84] = s_84;
  assign s[85] = s_85;
  assign s[86] = s_86;
  assign s[87] = s_87;
  assign s[88] = s_88;
  assign s[89] = s_89;
  assign s[90] = s_90;
  assign s[91] = s_91;
  assign s[92] = s_92;
  assign s[93] = s_93;
  assign s[94] = s_94;
  assign s[95] = s_95;
  assign s[96] = s_96;
  assign s[97] = s_97;
  assign s[98] = s_98;
  assign s[99] = s_99;

  assign n[0] = n_0;
  assign n[1] = n_1;
  assign n[2] = n_2;
  assign n[3] = n_3;
  assign n[4] = n_4;
  assign n[5] = n_5;
  assign n[6] = n_6;
  assign n[7] = n_7;
  assign n[8] = n_8;
  assign n[9] = n_9;
  assign n[10] = n_10;
  assign n[11] = n_11;
  assign n[12] = n_12;
  assign n[13] = n_13;
  assign n[14] = n_14;
  assign n[15] = n_15;
  assign n[16] = n_16;
  assign n[17] = n_17;
  assign n[18] = n_18;
  assign n[19] = n_19;
  assign n[20] = n_20;
  assign n[21] = n_21;
  assign n[22] = n_22;
  assign n[23] = n_23;
  assign n[24] = n_24;
  assign n[25] = n_25;
  assign n[26] = n_26;
  assign n[27] = n_27;
  assign n[28] = n_28;
  assign n[29] = n_29;
  assign n[30] = n_30;
  assign n[31] = n_31;
  assign n[32] = n_32;
  assign n[33] = n_33;
  assign n[34] = n_34;
  assign n[35] = n_35;
  assign n[36] = n_36;
  assign n[37] = n_37;
  assign n[38] = n_38;
  assign n[39] = n_39;
  assign n[40] = n_40;
  assign n[41] = n_41;
  assign n[42] = n_42;
  assign n[43] = n_43;
  assign n[44] = n_44;
  assign n[45] = n_45;
  assign n[46] = n_46;
  assign n[47] = n_47;
  assign n[48] = n_48;
  assign n[49] = n_49;
  assign n[50] = n_50;
  assign n[51] = n_51;
  assign n[52] = n_52;
  assign n[53] = n_53;
  assign n[54] = n_54;
  assign n[55] = n_55;
  assign n[56] = n_56;
  assign n[57] = n_57;
  assign n[58] = n_58;
  assign n[59] = n_59;
  assign n[60] = n_60;
  assign n[61] = n_61;
  assign n[62] = n_62;
  assign n[63] = n_63;
  assign n[64] = n_64;
  assign n[65] = n_65;
  assign n[66] = n_66;
  assign n[67] = n_67;
  assign n[68] = n_68;
  assign n[69] = n_69;
  assign n[70] = n_70;
  assign n[71] = n_71;
  assign n[72] = n_72;
  assign n[73] = n_73;
  assign n[74] = n_74;
  assign n[75] = n_75;
  assign n[76] = n_76;
  assign n[77] = n_77;
  assign n[78] = n_78;
  assign n[79] = n_79;
  assign n[80] = n_80;
  assign n[81] = n_81;
  assign n[82] = n_82;
  assign n[83] = n_83;
  assign n[84] = n_84;
  assign n[85] = n_85;
  assign n[86] = n_86;
  assign n[87] = n_87;
  assign n[88] = n_88;
  assign n[89] = n_89;
  assign n[90] = n_90;
  assign n[91] = n_91;
  assign n[92] = n_92;
  assign n[93] = n_93;
  assign n[94] = n_94;
  assign n[95] = n_95;
  assign n[96] = n_96;
  assign n[97] = n_97;
  assign n[98] = n_98;
  assign n[99] = n_99;

  always @* begin
    //HDL code generation from MATLAB function: noise_cancel_fixpt
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //                                                                          %
    //           Generated by MATLAB 9.2 and Fixed-Point Designer 5.4           %
    //                                                                          %
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //UNTITLED Summary of this function goes here
    //   Detailed explanation goes here
    // p=inputParser;
    // argName='bhat W e';
    // default=[zeros(1,itno) zeros(1,size(bhat,1)) zeros(1,itno)] ;
    // % argName1='W';
    // % default=zeros(1,size(bhat,1));
    // % argName2='e';
    // % default=zeros(1,itno);
    // addOptional(p,argName,default);
    noise_cancel_fixpt_bhat = {26{1'b0}};
    noise_cancel_fixpt_e = {26{1'b0}};
    // if nargin < 2
    //   error('signal and noise are required inputs')
    // end
    // 
    // if nargin < 3
    //   e = zeros(1,itno);
    //   W=zeros(1,size(bhat,1));
    //   bhat=zeros(1,itno);
    // end
    // 
    // if nargin < 4
    //   W=zeros(1,size(bhat,1));
    //   bhat=zeros(1,itno);
    // end
    // if nargin < 5
    //     bhat=zeros(1,itno);
    // end
    // 
    W_1 = 1'b0;

    for(noise_cancel_fixpt_i = 32'sd0; noise_cancel_fixpt_i <= 32'sd24; noise_cancel_fixpt_i = noise_cancel_fixpt_i + 32'sd1) begin
      noise_cancel_fixpt_add_temp_8[noise_cancel_fixpt_i] = noise_cancel_fixpt_i + 32'sd1;
      noise_cancel_fixpt_t_0[noise_cancel_fixpt_i] = noise_cancel_fixpt_add_temp_8[noise_cancel_fixpt_i][7:0];
      noise_cancel_fixpt_t_1[noise_cancel_fixpt_i] = {noise_cancel_fixpt_t_0[noise_cancel_fixpt_i][7], noise_cancel_fixpt_t_0[noise_cancel_fixpt_i]};
      noise_cancel_fixpt_add_temp[noise_cancel_fixpt_i] = noise_cancel_fixpt_t_1[noise_cancel_fixpt_i] + 9'sb000000001;
      noise_cancel_fixpt_t_2[noise_cancel_fixpt_i] = {noise_cancel_fixpt_add_temp[noise_cancel_fixpt_i][8], noise_cancel_fixpt_add_temp[noise_cancel_fixpt_i]};
      noise_cancel_fixpt_sub_temp[noise_cancel_fixpt_i] = noise_cancel_fixpt_t_2[noise_cancel_fixpt_i] - 10'sb0000000001;
      W_1 = {1{n[noise_cancel_fixpt_sub_temp[noise_cancel_fixpt_i] - 32'sd1][13]}};
    end

    noise_cancel_fixpt_bhat_0 = noise_cancel_fixpt_bhat;
    noise_cancel_fixpt_e_0 = noise_cancel_fixpt_e;

    for(noise_cancel_fixpt_i_1 = 32'sd0; noise_cancel_fixpt_i_1 <= 32'sd24; noise_cancel_fixpt_i_1 = noise_cancel_fixpt_i_1 + 32'sd1) begin
      noise_cancel_fixpt_add_temp_0[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_i_1 + 32'sd1;
      noise_cancel_fixpt_i_0 = noise_cancel_fixpt_add_temp_0[noise_cancel_fixpt_i_1][7:0];
      noise_cancel_fixpt_t_3[noise_cancel_fixpt_i_1] = {noise_cancel_fixpt_i_0[7], noise_cancel_fixpt_i_0};
      noise_cancel_fixpt_add_temp_1[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_3[noise_cancel_fixpt_i_1] + 9'sb000000001;
      noise_cancel_fixpt_t_4[noise_cancel_fixpt_i_1] = {noise_cancel_fixpt_add_temp_1[noise_cancel_fixpt_i_1][8], noise_cancel_fixpt_add_temp_1[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_sub_temp_0[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_4[noise_cancel_fixpt_i_1] - 10'sb0000000001;
      noise_cancel_fixpt_W = {1{n[noise_cancel_fixpt_sub_temp_0[noise_cancel_fixpt_i_1] - 32'sd1][13]}};
      noise_cancel_fixpt_sub_cast[noise_cancel_fixpt_i_1] = {1{s[noise_cancel_fixpt_i_0 - 32'sd1][13]}};
      if (noise_cancel_fixpt_W == 1'b1) begin
        noise_cancel_fixpt_t_5[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_bhat_0[noise_cancel_fixpt_i_0 - 32'sd1];
      end
      else begin
        noise_cancel_fixpt_t_5[noise_cancel_fixpt_i_1] = 1'b0;
      end
      noise_cancel_fixpt_sub_cast_0[noise_cancel_fixpt_i_1] = {2'b0, noise_cancel_fixpt_t_5[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_t_6[noise_cancel_fixpt_i_1] = {2'b0, noise_cancel_fixpt_sub_cast[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_sub_temp_1[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_6[noise_cancel_fixpt_i_1] - noise_cancel_fixpt_sub_cast_0[noise_cancel_fixpt_i_1];
      noise_cancel_fixpt_e_0[noise_cancel_fixpt_i_0 - 32'sd1] = noise_cancel_fixpt_sub_temp_1[noise_cancel_fixpt_i_1][0];
      noise_cancel_fixpt_t_7[noise_cancel_fixpt_i_1] = {{2{noise_cancel_fixpt_i_0[7]}}, noise_cancel_fixpt_i_0};
      noise_cancel_fixpt_add_temp_2[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_7[noise_cancel_fixpt_i_1] + 10'sb0000000001;
      if (noise_cancel_fixpt_e_0[noise_cancel_fixpt_i_0 - 32'sd1] == 1'b1) begin
        noise_cancel_fixpt_t_8[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_W;
      end
      else begin
        noise_cancel_fixpt_t_8[noise_cancel_fixpt_i_1] = 1'b0;
      end
      noise_cancel_fixpt_add_cast[noise_cancel_fixpt_i_1] = {3'b0, noise_cancel_fixpt_t_8[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_t_9[noise_cancel_fixpt_i_1] = {3'b0, noise_cancel_fixpt_bhat_0[noise_cancel_fixpt_i_0 - 32'sd1]};
      noise_cancel_fixpt_add_temp_3[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_9[noise_cancel_fixpt_i_1] + noise_cancel_fixpt_add_cast[noise_cancel_fixpt_i_1];
      noise_cancel_fixpt_bhat_0[noise_cancel_fixpt_add_temp_2[noise_cancel_fixpt_i_1] - 32'sd1] = noise_cancel_fixpt_add_temp_3[noise_cancel_fixpt_i_1][0];
      noise_cancel_fixpt_add_temp_4[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_i_1 + 32'sd1;
      noise_cancel_fixpt_i_2 = noise_cancel_fixpt_add_temp_4[noise_cancel_fixpt_i_1][7:0];
      noise_cancel_fixpt_t_10[noise_cancel_fixpt_i_1] = {noise_cancel_fixpt_i_2[7], noise_cancel_fixpt_i_2};
      noise_cancel_fixpt_add_temp_5[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_10[noise_cancel_fixpt_i_1] + 9'sb000000001;
      noise_cancel_fixpt_t_11[noise_cancel_fixpt_i_1] = {noise_cancel_fixpt_add_temp_5[noise_cancel_fixpt_i_1][8], noise_cancel_fixpt_add_temp_5[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_sub_temp_2[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_11[noise_cancel_fixpt_i_1] - 10'sb0000000001;
      noise_cancel_fixpt_W_0 = {1{n[noise_cancel_fixpt_sub_temp_2[noise_cancel_fixpt_i_1] - 32'sd1][13]}};
      noise_cancel_fixpt_sub_cast_1[noise_cancel_fixpt_i_1] = {1{s[noise_cancel_fixpt_i_2 - 32'sd1][13]}};
      if (noise_cancel_fixpt_W_0 == 1'b1) begin
        noise_cancel_fixpt_t_12[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_bhat[noise_cancel_fixpt_i_2 - 32'sd1];
      end
      else begin
        noise_cancel_fixpt_t_12[noise_cancel_fixpt_i_1] = 1'b0;
      end
      noise_cancel_fixpt_sub_cast_2[noise_cancel_fixpt_i_1] = {2'b0, noise_cancel_fixpt_t_12[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_t_13[noise_cancel_fixpt_i_1] = {2'b0, noise_cancel_fixpt_sub_cast_1[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_sub_temp_3[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_13[noise_cancel_fixpt_i_1] - noise_cancel_fixpt_sub_cast_2[noise_cancel_fixpt_i_1];
      noise_cancel_fixpt_e[noise_cancel_fixpt_i_2 - 32'sd1] = noise_cancel_fixpt_sub_temp_3[noise_cancel_fixpt_i_1][0];
      noise_cancel_fixpt_t_14[noise_cancel_fixpt_i_1] = {{2{noise_cancel_fixpt_i_2[7]}}, noise_cancel_fixpt_i_2};
      noise_cancel_fixpt_add_temp_6[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_14[noise_cancel_fixpt_i_1] + 10'sb0000000001;
      if (noise_cancel_fixpt_e[noise_cancel_fixpt_i_2 - 32'sd1] == 1'b1) begin
        noise_cancel_fixpt_t_15[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_W_0;
      end
      else begin
        noise_cancel_fixpt_t_15[noise_cancel_fixpt_i_1] = 1'b0;
      end
      noise_cancel_fixpt_add_cast_0[noise_cancel_fixpt_i_1] = {3'b0, noise_cancel_fixpt_t_15[noise_cancel_fixpt_i_1]};
      noise_cancel_fixpt_t_16[noise_cancel_fixpt_i_1] = {3'b0, noise_cancel_fixpt_bhat[noise_cancel_fixpt_i_2 - 32'sd1]};
      noise_cancel_fixpt_add_temp_7[noise_cancel_fixpt_i_1] = noise_cancel_fixpt_t_16[noise_cancel_fixpt_i_1] + noise_cancel_fixpt_add_cast_0[noise_cancel_fixpt_i_1];
      noise_cancel_fixpt_bhat[noise_cancel_fixpt_add_temp_6[noise_cancel_fixpt_i_1] - 32'sd1] = noise_cancel_fixpt_add_temp_7[noise_cancel_fixpt_i_1][0];
    end

    bhat = noise_cancel_fixpt_bhat;
    e = noise_cancel_fixpt_e_0;
  end



  assign e_0 = e[0];

  assign e_1 = e[1];

  assign e_2 = e[2];

  assign e_3 = e[3];

  assign e_4 = e[4];

  assign e_5 = e[5];

  assign e_6 = e[6];

  assign e_7 = e[7];

  assign e_8 = e[8];

  assign e_9 = e[9];

  assign e_10 = e[10];

  assign e_11 = e[11];

  assign e_12 = e[12];

  assign e_13 = e[13];

  assign e_14 = e[14];

  assign e_15 = e[15];

  assign e_16 = e[16];

  assign e_17 = e[17];

  assign e_18 = e[18];

  assign e_19 = e[19];

  assign e_20 = e[20];

  assign e_21 = e[21];

  assign e_22 = e[22];

  assign e_23 = e[23];

  assign e_24 = e[24];

  assign e_25 = e[25];

  assign bhat_0 = bhat[0];

  assign bhat_1 = bhat[1];

  assign bhat_2 = bhat[2];

  assign bhat_3 = bhat[3];

  assign bhat_4 = bhat[4];

  assign bhat_5 = bhat[5];

  assign bhat_6 = bhat[6];

  assign bhat_7 = bhat[7];

  assign bhat_8 = bhat[8];

  assign bhat_9 = bhat[9];

  assign bhat_10 = bhat[10];

  assign bhat_11 = bhat[11];

  assign bhat_12 = bhat[12];

  assign bhat_13 = bhat[13];

  assign bhat_14 = bhat[14];

  assign bhat_15 = bhat[15];

  assign bhat_16 = bhat[16];

  assign bhat_17 = bhat[17];

  assign bhat_18 = bhat[18];

  assign bhat_19 = bhat[19];

  assign bhat_20 = bhat[20];

  assign bhat_21 = bhat[21];

  assign bhat_22 = bhat[22];

  assign bhat_23 = bhat[23];

  assign bhat_24 = bhat[24];

  assign bhat_25 = bhat[25];

  assign W = W_1;

endmodule  // noise_cancel_fixpt

